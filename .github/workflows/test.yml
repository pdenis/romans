name: Test

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Zip
        run: zip -r repository.zip .

      - name: Repository
        uses: actions/upload-artifact@v2
        with:
          name: repository
          path: repository.zip

  test:
    needs: checkout
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php_version:
          - "7.4"
          - "8.0"
          - "8.1.0alpha2"
    steps:
      - name: Checkout
        uses: actions/download-artifact@v2
        with:
          name: repository

      - name: Unzip
        run: unzip repository.zip && rm -f repository.zip

      - name: Prepare
        run: |
          echo UID=`id -u` >> $GITHUB_ENV
          echo GID=`id -g` >> $GITHUB_ENV

      - name: Build
        run: docker-compose build
        env:
          PHP_VERSION: ${{ matrix.php_version }}

      - name: Install
        run: docker-compose run romans composer install

      - name: Test
        run: docker-compose run -e COVERAGE_OPTIONS romans composer test
        env:
          COVERAGE_OPTIONS: --coverage-text --coverage-html build/coverage --coverage-clover build/coverage.xml

      - name: Package
        run: docker-compose run romans composer archive --dir build --format zip --file package

      - name: Clean
        run: docker-compose down
        if: always()

      - name: Zip
        run: zip -r repository.zip .
        if: matrix.php_version == '8.0'

      - name: Repository
        uses: actions/upload-artifact@v2
        if: matrix.php_version == '8.0'
        with:
          name: repository
          path: repository.zip

  reports:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/download-artifact@v2
        with:
          name: repository

      - name: Unzip
        run: unzip repository.zip && rm -f repository.zip

      - name: Coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: build/coverage/

      - name: Package
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: build/package.zip

      - name: Codecov
        run: bash <(curl -s https://codecov.io/bash) -f build/coverage.xml
        if: github.ref == 'refs/heads/main'
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  clean:
    needs: reports
    runs-on: ubuntu-latest
    steps:
      - name: Clean
        uses: geekyeggo/delete-artifact@v1
        with:
          name: repository
